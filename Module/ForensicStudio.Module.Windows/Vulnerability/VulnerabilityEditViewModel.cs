using System.Collections.ObjectModel;
using System.Threading.Tasks;
using ForensicStudio.Core.Main.Lookup;
using ForensicStudio.DataAccess.Wrapper.Windows;
using ForensicStudio.Module.Core.Edit;
using ForensicStudio.Service.Core.Container;
using ForensicStudio.Service.Main.DateTime;
using ForensicStudio.Service.Windows.Vulnerability;
using ForensicStudio.Service.Windows.WindowsLookup;

namespace ForensicStudio.Module.Windows.Vulnerability;

public class VulnerabilityEditViewModel :
    EditViewModelBase<DataAccess.Model.Windows.Vulnerability, VulnerabilityWrapper>
{
    private readonly IVulnerabilitySourceLookupDataService _vulnerabilitySourceLookupDataService;
    private readonly IDateTimeService _dateTimeService;

    public VulnerabilityEditViewModel(IContainerService containerService,
        IVulnerabilityService vulnerabilityService,
        IVulnerabilitySourceLookupDataService vulnerabilitySourceLookupDataService, IDateTimeService dateTimeService)
        : base(containerService, vulnerabilityService)
    {
        _vulnerabilitySourceLookupDataService = vulnerabilitySourceLookupDataService;
        _dateTimeService = dateTimeService;
    }

    public override async Task LoadAsync()
    {
        await base.LoadAsync();

        VulnerabilitySources = new ObservableCollection<LookupItem>(
            await _vulnerabilitySourceLookupDataService.GetVulnerabilitySourceLookupAsync());
    }

    protected override DataAccess.Model.Windows.Vulnerability CreateNewModel()
    {
        var vulnerability = base.CreateNewModel();

        vulnerability.PublishedDate = _dateTimeService.GetTodayDate();
        vulnerability.LastModifiedDateTime = _dateTimeService.GetTodayDateTime();

        return vulnerability;
    }

    private ObservableCollection<LookupItem> _vulnerabilitySources;
    public ObservableCollection<LookupItem> VulnerabilitySources
    {
        get => _vulnerabilitySources;
        set
        {
            _vulnerabilitySources = value;
            OnPropertyChanged();
        }
    }

    public override void Dispose()
    {
        _vulnerabilitySourceLookupDataService.Dispose();
    }
}